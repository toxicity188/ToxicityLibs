plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'maven-publish'
}

def pluginGroup = 'kor.toxicity.toxicitylibs'
def pluginVersion = '1.0.3'

def adventureVersion = '4.14.0'
def platformVersion = '4.3.1'


allprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    group = pluginGroup
    version = pluginVersion

    repositories {
        mavenCentral()
        maven {
            name = "papermc-repo"
            url = "https://repo.papermc.io/repository/maven-public/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public/"
        }
        maven {
            url = "https://jitpack.io"
        }
    }
    dependencies {
        compileOnly("net.kyori:adventure-api:$adventureVersion")
        compileOnly("net.kyori:adventure-platform-bukkit:$platformVersion")

        compileOnly(group: "com.github.PlaceholderAPI", name: "PlaceholderAPI", version: "master-SNAPSHOT")
        implementation 'org.mongodb:mongodb-driver-sync:4.10.2'
    }
    processResources {
        def props = [version: version, adventure: adventureVersion, platform: platformVersion]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('plugin.yml') {
            expand props
        }
    }
}

dependencies {
    implementation(project(path: ":plugin", configuration: "shadow"))
}


def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}
jar {
    finalizedBy shadowJar
}


afterEvaluate {
    publishing {
        publications {
            shadow(MavenPublication) { publication ->
                project.shadow.component(publication)
            }
        }
    }
}